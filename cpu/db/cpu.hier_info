|cpu
inputPlaca[0] => Mux23.IN0
inputPlaca[0] => Mux31.IN0
inputPlaca[1] => Mux22.IN0
inputPlaca[1] => Mux30.IN0
inputPlaca[2] => Mux21.IN0
inputPlaca[2] => Mux29.IN0
inputPlaca[3] => Mux20.IN0
inputPlaca[3] => Mux28.IN0
inputPlaca[4] => Mux19.IN0
inputPlaca[4] => Mux27.IN0
inputPlaca[5] => Mux18.IN0
inputPlaca[5] => Mux26.IN0
inputPlaca[6] => Mux17.IN0
inputPlaca[6] => Mux25.IN0
inputPlaca[7] => Mux16.IN0
inputPlaca[7] => Mux24.IN0
outputPlaca[0] << outputPlaca[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[1] << outputPlaca[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[2] << outputPlaca[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[3] << outputPlaca[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[4] << outputPlaca[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[5] << outputPlaca[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[6] << outputPlaca[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outputPlaca[7] << outputPlaca[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => reg2[0].ACLR
reset => reg2[1].ACLR
reset => reg2[2].ACLR
reset => reg2[3].ACLR
reset => reg2[4].ACLR
reset => reg2[5].ACLR
reset => reg2[6].ACLR
reset => reg2[7].ACLR
reset => reg1[0].ACLR
reset => reg1[1].ACLR
reset => reg1[2].ACLR
reset => reg1[3].ACLR
reset => reg1[4].ACLR
reset => reg1[5].ACLR
reset => reg1[6].ACLR
reset => reg1[7].ACLR
reset => outputPlaca[0]~reg0.ACLR
reset => outputPlaca[1]~reg0.ACLR
reset => outputPlaca[2]~reg0.ACLR
reset => outputPlaca[3]~reg0.ACLR
reset => outputPlaca[4]~reg0.ACLR
reset => outputPlaca[5]~reg0.ACLR
reset => outputPlaca[6]~reg0.ACLR
reset => outputPlaca[7]~reg0.ACLR
reset => instruction_reg[0].ACLR
reset => instruction_reg[1].ACLR
reset => instruction_reg[2].ACLR
reset => instruction_reg[3].ACLR
reset => instruction_reg[4].ACLR
reset => instruction_reg[5].ACLR
reset => instruction_reg[6].ACLR
reset => instruction_reg[7].ACLR
reset => reg_data[0].ACLR
reset => reg_data[1].ACLR
reset => reg_data[2].ACLR
reset => reg_data[3].ACLR
reset => reg_data[4].ACLR
reset => reg_data[5].ACLR
reset => reg_data[6].ACLR
reset => reg_data[7].ACLR
reset => pc_reg[0].ACLR
reset => pc_reg[1].ACLR
reset => pc_reg[2].ACLR
reset => pc_reg[3].ACLR
reset => pc_reg[4].ACLR
reset => pc_reg[5].ACLR
reset => pc_reg[6].ACLR
reset => pc_reg[7].ACLR
reset => state~3.DATAIN
reset => data_in[0].ENA
reset => endereco[7].ENA
reset => endereco[6].ENA
reset => endereco[5].ENA
reset => endereco[4].ENA
reset => endereco[3].ENA
reset => endereco[2].ENA
reset => endereco[1].ENA
reset => endereco[0].ENA
reset => habilitar_escrita.ENA
reset => opCode[3].ENA
reset => opCode[2].ENA
reset => opCode[1].ENA
reset => opCode[0].ENA
reset => registerCode[3].ENA
reset => registerCode[2].ENA
reset => registerCode[1].ENA
reset => registerCode[0].ENA
reset => alu_comando[3].ENA
reset => alu_comando[2].ENA
reset => alu_comando[1].ENA
reset => alu_comando[0].ENA
reset => alu_input1[7].ENA
reset => alu_input1[6].ENA
reset => alu_input1[5].ENA
reset => alu_input1[4].ENA
reset => alu_input1[3].ENA
reset => alu_input1[2].ENA
reset => alu_input1[1].ENA
reset => alu_input1[0].ENA
reset => alu_input2[7].ENA
reset => alu_input2[6].ENA
reset => alu_input2[5].ENA
reset => alu_input2[4].ENA
reset => alu_input2[3].ENA
reset => alu_input2[2].ENA
reset => alu_input2[1].ENA
reset => alu_input2[0].ENA
reset => reg_flag_0.ENA
reset => reg_flag_signal.ENA
reset => data_in[7].ENA
reset => data_in[6].ENA
reset => data_in[5].ENA
reset => data_in[4].ENA
reset => data_in[3].ENA
reset => data_in[2].ENA
reset => data_in[1].ENA
clk => memoria1:memoria_inst.clock
clk => data_in[0].CLK
clk => data_in[1].CLK
clk => data_in[2].CLK
clk => data_in[3].CLK
clk => data_in[4].CLK
clk => data_in[5].CLK
clk => data_in[6].CLK
clk => data_in[7].CLK
clk => reg_flag_signal.CLK
clk => reg_flag_0.CLK
clk => alu_input2[0].CLK
clk => alu_input2[1].CLK
clk => alu_input2[2].CLK
clk => alu_input2[3].CLK
clk => alu_input2[4].CLK
clk => alu_input2[5].CLK
clk => alu_input2[6].CLK
clk => alu_input2[7].CLK
clk => alu_input1[0].CLK
clk => alu_input1[1].CLK
clk => alu_input1[2].CLK
clk => alu_input1[3].CLK
clk => alu_input1[4].CLK
clk => alu_input1[5].CLK
clk => alu_input1[6].CLK
clk => alu_input1[7].CLK
clk => alu_comando[0].CLK
clk => alu_comando[1].CLK
clk => alu_comando[2].CLK
clk => alu_comando[3].CLK
clk => registerCode[0].CLK
clk => registerCode[1].CLK
clk => registerCode[2].CLK
clk => registerCode[3].CLK
clk => opCode[0].CLK
clk => opCode[1].CLK
clk => opCode[2].CLK
clk => opCode[3].CLK
clk => habilitar_escrita.CLK
clk => endereco[0].CLK
clk => endereco[1].CLK
clk => endereco[2].CLK
clk => endereco[3].CLK
clk => endereco[4].CLK
clk => endereco[5].CLK
clk => endereco[6].CLK
clk => endereco[7].CLK
clk => reg2[0].CLK
clk => reg2[1].CLK
clk => reg2[2].CLK
clk => reg2[3].CLK
clk => reg2[4].CLK
clk => reg2[5].CLK
clk => reg2[6].CLK
clk => reg2[7].CLK
clk => reg1[0].CLK
clk => reg1[1].CLK
clk => reg1[2].CLK
clk => reg1[3].CLK
clk => reg1[4].CLK
clk => reg1[5].CLK
clk => reg1[6].CLK
clk => reg1[7].CLK
clk => outputPlaca[0]~reg0.CLK
clk => outputPlaca[1]~reg0.CLK
clk => outputPlaca[2]~reg0.CLK
clk => outputPlaca[3]~reg0.CLK
clk => outputPlaca[4]~reg0.CLK
clk => outputPlaca[5]~reg0.CLK
clk => outputPlaca[6]~reg0.CLK
clk => outputPlaca[7]~reg0.CLK
clk => instruction_reg[0].CLK
clk => instruction_reg[1].CLK
clk => instruction_reg[2].CLK
clk => instruction_reg[3].CLK
clk => instruction_reg[4].CLK
clk => instruction_reg[5].CLK
clk => instruction_reg[6].CLK
clk => instruction_reg[7].CLK
clk => reg_data[0].CLK
clk => reg_data[1].CLK
clk => reg_data[2].CLK
clk => reg_data[3].CLK
clk => reg_data[4].CLK
clk => reg_data[5].CLK
clk => reg_data[6].CLK
clk => reg_data[7].CLK
clk => pc_reg[0].CLK
clk => pc_reg[1].CLK
clk => pc_reg[2].CLK
clk => pc_reg[3].CLK
clk => pc_reg[4].CLK
clk => pc_reg[5].CLK
clk => pc_reg[6].CLK
clk => pc_reg[7].CLK
clk => outputClk.DATAIN
clk => state~1.DATAIN
outputClk << clk.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst
comando[0] => Mux0.IN17
comando[0] => Mux1.IN17
comando[0] => Mux2.IN17
comando[0] => Mux3.IN17
comando[0] => Mux4.IN17
comando[0] => Mux5.IN17
comando[0] => Mux6.IN17
comando[0] => Mux7.IN17
comando[0] => Mux8.IN17
comando[0] => Mux9.IN17
comando[0] => Mux10.IN19
comando[1] => Mux0.IN16
comando[1] => Mux1.IN16
comando[1] => Mux2.IN16
comando[1] => Mux3.IN16
comando[1] => Mux4.IN16
comando[1] => Mux5.IN16
comando[1] => Mux6.IN16
comando[1] => Mux7.IN16
comando[1] => Mux8.IN16
comando[1] => Mux9.IN16
comando[1] => Mux10.IN18
comando[2] => Mux0.IN15
comando[2] => Mux1.IN15
comando[2] => Mux2.IN15
comando[2] => Mux3.IN15
comando[2] => Mux4.IN15
comando[2] => Mux5.IN15
comando[2] => Mux6.IN15
comando[2] => Mux7.IN15
comando[2] => Mux8.IN15
comando[2] => Mux9.IN15
comando[2] => Mux10.IN17
comando[3] => Mux0.IN14
comando[3] => Mux1.IN14
comando[3] => Mux2.IN14
comando[3] => Mux3.IN14
comando[3] => Mux4.IN14
comando[3] => Mux5.IN14
comando[3] => Mux6.IN14
comando[3] => Mux7.IN14
comando[3] => Mux8.IN14
comando[3] => Mux9.IN14
comando[3] => Mux10.IN16
input1[0] => internal_output.IN0
input1[0] => internal_output.IN0
input1[0] => fullAdder8bits:somar.A[0]
input1[0] => fullAdder8bits:subtrair.A[0]
input1[0] => Mux7.IN13
input1[1] => internal_output.IN0
input1[1] => internal_output.IN0
input1[1] => fullAdder8bits:somar.A[1]
input1[1] => fullAdder8bits:subtrair.A[1]
input1[1] => Mux6.IN13
input1[2] => internal_output.IN0
input1[2] => internal_output.IN0
input1[2] => fullAdder8bits:somar.A[2]
input1[2] => fullAdder8bits:subtrair.A[2]
input1[2] => Mux5.IN13
input1[3] => internal_output.IN0
input1[3] => internal_output.IN0
input1[3] => fullAdder8bits:somar.A[3]
input1[3] => fullAdder8bits:subtrair.A[3]
input1[3] => Mux4.IN13
input1[4] => internal_output.IN0
input1[4] => internal_output.IN0
input1[4] => fullAdder8bits:somar.A[4]
input1[4] => fullAdder8bits:subtrair.A[4]
input1[4] => Mux3.IN13
input1[5] => internal_output.IN0
input1[5] => internal_output.IN0
input1[5] => fullAdder8bits:somar.A[5]
input1[5] => fullAdder8bits:subtrair.A[5]
input1[5] => Mux2.IN13
input1[6] => internal_output.IN0
input1[6] => internal_output.IN0
input1[6] => fullAdder8bits:somar.A[6]
input1[6] => fullAdder8bits:subtrair.A[6]
input1[6] => Mux1.IN13
input1[7] => internal_output.IN0
input1[7] => internal_output.IN0
input1[7] => fullAdder8bits:somar.A[7]
input1[7] => fullAdder8bits:subtrair.A[7]
input1[7] => Mux0.IN13
input2[0] => internal_output.IN1
input2[0] => internal_output.IN1
input2[0] => fullAdder8bits:somar.B[0]
input2[0] => complemento_de_dois:complemento.num[0]
input2[1] => internal_output.IN1
input2[1] => internal_output.IN1
input2[1] => fullAdder8bits:somar.B[1]
input2[1] => complemento_de_dois:complemento.num[1]
input2[2] => internal_output.IN1
input2[2] => internal_output.IN1
input2[2] => fullAdder8bits:somar.B[2]
input2[2] => complemento_de_dois:complemento.num[2]
input2[3] => internal_output.IN1
input2[3] => internal_output.IN1
input2[3] => fullAdder8bits:somar.B[3]
input2[3] => complemento_de_dois:complemento.num[3]
input2[4] => internal_output.IN1
input2[4] => internal_output.IN1
input2[4] => fullAdder8bits:somar.B[4]
input2[4] => complemento_de_dois:complemento.num[4]
input2[5] => internal_output.IN1
input2[5] => internal_output.IN1
input2[5] => fullAdder8bits:somar.B[5]
input2[5] => complemento_de_dois:complemento.num[5]
input2[6] => internal_output.IN1
input2[6] => internal_output.IN1
input2[6] => fullAdder8bits:somar.B[6]
input2[6] => complemento_de_dois:complemento.num[6]
input2[7] => internal_output.IN1
input2[7] => internal_output.IN1
input2[7] => fullAdder8bits:somar.B[7]
input2[7] => complemento_de_dois:complemento.num[7]
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
flag_0 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flag_overflow <= flag_overflow$latch.DB_MAX_OUTPUT_PORT_TYPE
flag_signal <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
flag_carry <= flag_carry$latch.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar
A[0] => fullAdder:FA0.A
A[1] => fullAdder:FA1.A
A[2] => fullAdder:FA2.A
A[3] => fullAdder:FA3.A
A[4] => fullAdder:FA4.A
A[5] => fullAdder:FA5.A
A[6] => fullAdder:FA6.A
A[7] => fullAdder:FA7.A
B[0] => fullAdder:FA0.B
B[1] => fullAdder:FA1.B
B[2] => fullAdder:FA2.B
B[3] => fullAdder:FA3.B
B[4] => fullAdder:FA4.B
B[5] => fullAdder:FA5.B
B[6] => fullAdder:FA6.B
B[7] => fullAdder:FA7.B
Cin => fullAdder:FA0.Cin
Cout <= fullAdder:FA7.Cout
SUM[0] <= fullAdder:FA0.Sum
SUM[1] <= fullAdder:FA1.Sum
SUM[2] <= fullAdder:FA2.Sum
SUM[3] <= fullAdder:FA3.Sum
SUM[4] <= fullAdder:FA4.Sum
SUM[5] <= fullAdder:FA5.Sum
SUM[6] <= fullAdder:FA6.Sum
SUM[7] <= fullAdder:FA7.Sum
overflow <= overflow.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA0
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA1
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA2
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA3
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA4
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA5
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA6
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:somar|fullAdder:FA7
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|complemento_de_dois:complemento
num[0] => Add0.IN16
num[1] => Add0.IN15
num[2] => Add0.IN14
num[3] => Add0.IN13
num[4] => Add0.IN12
num[5] => Add0.IN11
num[6] => Add0.IN10
num[7] => Add0.IN9
complemento[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
complemento[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair
A[0] => fullAdder:FA0.A
A[1] => fullAdder:FA1.A
A[2] => fullAdder:FA2.A
A[3] => fullAdder:FA3.A
A[4] => fullAdder:FA4.A
A[5] => fullAdder:FA5.A
A[6] => fullAdder:FA6.A
A[7] => fullAdder:FA7.A
B[0] => fullAdder:FA0.B
B[1] => fullAdder:FA1.B
B[2] => fullAdder:FA2.B
B[3] => fullAdder:FA3.B
B[4] => fullAdder:FA4.B
B[5] => fullAdder:FA5.B
B[6] => fullAdder:FA6.B
B[7] => fullAdder:FA7.B
Cin => fullAdder:FA0.Cin
Cout <= fullAdder:FA7.Cout
SUM[0] <= fullAdder:FA0.Sum
SUM[1] <= fullAdder:FA1.Sum
SUM[2] <= fullAdder:FA2.Sum
SUM[3] <= fullAdder:FA3.Sum
SUM[4] <= fullAdder:FA4.Sum
SUM[5] <= fullAdder:FA5.Sum
SUM[6] <= fullAdder:FA6.Sum
SUM[7] <= fullAdder:FA7.Sum
overflow <= overflow.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA0
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA1
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA2
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA3
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA4
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA5
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA6
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|fullAdder8bits:subtrair|fullAdder:FA7
A => Sum.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
Cin => Sum.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|memoria1:memoria_inst
address[0] => memoria:inst1.address[0]
address[1] => memoria:inst1.address[1]
address[2] => memoria:inst1.address[2]
address[3] => memoria:inst1.address[3]
address[4] => memoria:inst1.address[4]
address[5] => memoria:inst1.address[5]
address[6] => memoria:inst1.address[6]
address[7] => memoria:inst1.address[7]
clock => memoria:inst1.clock
data[0] => memoria:inst1.data[0]
data[1] => memoria:inst1.data[1]
data[2] => memoria:inst1.data[2]
data[3] => memoria:inst1.data[3]
data[4] => memoria:inst1.data[4]
data[5] => memoria:inst1.data[5]
data[6] => memoria:inst1.data[6]
data[7] => memoria:inst1.data[7]
wren => memoria:inst1.wren
q[0] <= memoria:inst1.q[0]
q[1] <= memoria:inst1.q[1]
q[2] <= memoria:inst1.q[2]
q[3] <= memoria:inst1.q[3]
q[4] <= memoria:inst1.q[4]
q[5] <= memoria:inst1.q[5]
q[6] <= memoria:inst1.q[6]
q[7] <= memoria:inst1.q[7]


|cpu|memoria1:memoria_inst|memoria:inst1
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
data[6] => altsyncram:altsyncram_component.data_a[6]
data[7] => altsyncram:altsyncram_component.data_a[7]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]


|cpu|memoria1:memoria_inst|memoria:inst1|altsyncram:altsyncram_component
wren_a => altsyncram_mt14:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_mt14:auto_generated.data_a[0]
data_a[1] => altsyncram_mt14:auto_generated.data_a[1]
data_a[2] => altsyncram_mt14:auto_generated.data_a[2]
data_a[3] => altsyncram_mt14:auto_generated.data_a[3]
data_a[4] => altsyncram_mt14:auto_generated.data_a[4]
data_a[5] => altsyncram_mt14:auto_generated.data_a[5]
data_a[6] => altsyncram_mt14:auto_generated.data_a[6]
data_a[7] => altsyncram_mt14:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_mt14:auto_generated.address_a[0]
address_a[1] => altsyncram_mt14:auto_generated.address_a[1]
address_a[2] => altsyncram_mt14:auto_generated.address_a[2]
address_a[3] => altsyncram_mt14:auto_generated.address_a[3]
address_a[4] => altsyncram_mt14:auto_generated.address_a[4]
address_a[5] => altsyncram_mt14:auto_generated.address_a[5]
address_a[6] => altsyncram_mt14:auto_generated.address_a[6]
address_a[7] => altsyncram_mt14:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_mt14:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_mt14:auto_generated.q_a[0]
q_a[1] <= altsyncram_mt14:auto_generated.q_a[1]
q_a[2] <= altsyncram_mt14:auto_generated.q_a[2]
q_a[3] <= altsyncram_mt14:auto_generated.q_a[3]
q_a[4] <= altsyncram_mt14:auto_generated.q_a[4]
q_a[5] <= altsyncram_mt14:auto_generated.q_a[5]
q_a[6] <= altsyncram_mt14:auto_generated.q_a[6]
q_a[7] <= altsyncram_mt14:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|cpu|memoria1:memoria_inst|memoria:inst1|altsyncram:altsyncram_component|altsyncram_mt14:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE


